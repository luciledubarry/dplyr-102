---
title: "Financial data analysis"
author: "Lucile Dubarry"
format: html
---

```{r}
#| message: false
here::i_am("dplyr-102.Rproj")
library(here)
library(tidyr)
library(dplyr)
library(vroom)
library(ggplot2)
```

## Data loading
```{r}
#| message: false
clients <- vroom(here("data", "client.csv"))
disp <- vroom(here("data", "disp.csv"))
accounts <- vroom(here("data", "account.csv"))
```

## Joining data tables
A collection of joining functions of the form `*_join`

### Inner join
```{r}
#| message: false
da <- inner_join(accounts, disp)
```
If we obtain an incoherent number of rows, there could a problem with delimitation, must use the delim function. 

```{r}
cda <- inner_join(clients, da, by = join_by(client_id), suffix = c("_home", "_bank"))
```
make the joining on a specific variable, would create 2 variables id_district (because are in common in both tables)

suffix function = differentiate name of common variables between 2 tables

### Bank district VS home district
```{r}
home_diff_bank <- 
  cda |> filter(district_id_home != district_id_bank) |> nrow()
```
We observe that `r home_diff_bank` clients have a bank in another district than the one they live in 

```{r}
cda |> 
  group_by(account_id) |>
  distinct(district_id_home) |>
  summarise(N=n()) |>
  filter(N>1)
```
distinct = group aware
displays number of distinct values in each group of account_id

Distinct(district_id_home) allows to separate the shared accounts and the share account inanother district (than the bank district). 

The result means there is no family with which members live in another district than the district of their bank account. 

### Gender gap?
```{r}
clients |> count(gender)
```
```{r}
clients |>
  ggplot(aes(y=gender)) + ## better to put high count on y-axis
  geom_bar() + 
  coord_flip()
```
No gender imbalance in accounts owner in the sample

```{r}
cda |>
  count(gender, type) |>
  group_by(gender) |>
  mutate(freq=n/sum(n)) |>
  select(-n) |>
  ungroup() |>
  pivot_wider(values_from = freq, names_from = type)
```
```{r}
cda |>
  ggplot(aes(y=gender, fill=type)) +
  geom_bar()
```
```{r}
chisq.test(cda |> pull(gender),
           cda |> pull(type))
```

